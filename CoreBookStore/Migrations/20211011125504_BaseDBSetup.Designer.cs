// <auto-generated />
using System;
using CoreBookStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreBookStore.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20211011125504_BaseDBSetup")]
    partial class BaseDBSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreBookStore.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "Ellen Clifford",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 583, DateTimeKind.Local).AddTicks(9997),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(19)
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Felicity Fenton",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(702),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(704)
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Grace Bonney",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(707),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(708)
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "Isabel Yap",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(709),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(710)
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Maeve Kelly",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(711),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(712)
                        },
                        new
                        {
                            AuthorId = 6,
                            AuthorName = "McCormack",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(713),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(714)
                        },
                        new
                        {
                            AuthorId = 7,
                            AuthorName = "Nial Bourke",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(716),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(716)
                        },
                        new
                        {
                            AuthorId = 8,
                            AuthorName = "Sarah Rees Brennan",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(718),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(719)
                        },
                        new
                        {
                            AuthorId = 9,
                            AuthorName = "Vinayak Varma",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(721),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(722)
                        });
                });

            modelBuilder.Entity("CoreBookStore.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("CoreBookStore.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookAuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BookAuthorId");

                    b.ToTable("BookAuthors");
                });

            modelBuilder.Entity("CoreBookStore.Models.BookLanguage", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("LanguageId");

                    b.ToTable("BookLanguages");

                    b.HasData(
                        new
                        {
                            LanguageId = 1,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 581, DateTimeKind.Local).AddTicks(1517),
                            CultureName = "en-US",
                            IsDeleted = false,
                            LanguageCode = "1033",
                            LanguageName = "English",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(1310)
                        },
                        new
                        {
                            LanguageId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3541),
                            CultureName = "en-GB",
                            IsDeleted = false,
                            LanguageCode = "2057",
                            LanguageName = "English",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3548)
                        },
                        new
                        {
                            LanguageId = 3,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3551),
                            CultureName = "fr-FR",
                            IsDeleted = false,
                            LanguageCode = "1036",
                            LanguageName = "French",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3552)
                        },
                        new
                        {
                            LanguageId = 4,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3554),
                            CultureName = "it-IT",
                            IsDeleted = false,
                            LanguageCode = "1040",
                            LanguageName = "Italian",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3555)
                        },
                        new
                        {
                            LanguageId = 5,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3556),
                            CultureName = "es-ES",
                            IsDeleted = false,
                            LanguageCode = "3082",
                            LanguageName = "Spanish",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3557)
                        },
                        new
                        {
                            LanguageId = 6,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3559),
                            CultureName = "de-DE",
                            IsDeleted = false,
                            LanguageCode = "1031",
                            LanguageName = "German",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3560)
                        },
                        new
                        {
                            LanguageId = 7,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3561),
                            CultureName = "ar-AE",
                            IsDeleted = false,
                            LanguageCode = "14337",
                            LanguageName = "Arabic",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3562)
                        },
                        new
                        {
                            LanguageId = 8,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3565),
                            CultureName = "ru-RU",
                            IsDeleted = false,
                            LanguageCode = "1049",
                            LanguageName = "Russian",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 582, DateTimeKind.Local).AddTicks(3566)
                        });
                });

            modelBuilder.Entity("CoreBookStore.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1258),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1262),
                            PublisherName = "Artisan Books"
                        },
                        new
                        {
                            PublisherId = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1806),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1810),
                            PublisherName = "Future Tense Books"
                        },
                        new
                        {
                            PublisherId = 3,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1812),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1813),
                            PublisherName = "Pratham Books"
                        },
                        new
                        {
                            PublisherId = 4,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1814),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1815),
                            PublisherName = "Small Beer Press"
                        },
                        new
                        {
                            PublisherId = 5,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1817),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1818),
                            PublisherName = "Tramp Press"
                        },
                        new
                        {
                            PublisherId = 6,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1819),
                            IsDeleted = false,
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2021, 10, 11, 18, 25, 3, 584, DateTimeKind.Local).AddTicks(1820),
                            PublisherName = "Zed Books"
                        });
                });

            modelBuilder.Entity("CoreBookStore.Models.Book", b =>
                {
                    b.HasOne("CoreBookStore.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreBookStore.Models.BookLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreBookStore.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Language");

                    b.Navigation("Publisher");
                });
#pragma warning restore 612, 618
        }
    }
}
